//------------------------------------------------
//--- 010 Editor Binary Template
//
//      File: fighter_command.cfc
//   Authors: HeartlessSeph - Modified by Draxx182
//   Version: 0
//   Purpose: Old Engine Property.bin Mapping
//   History
//   1.00    24/01/2021  HeartlessSeph - started this - Also modified by Draxx182 lol
//------------------------------------------------

//---------------------------------------------
// Includes
//---------------------------------------------

BigEndian();
local int h<hidden=true>;
local int i<hidden=true>;
local int j<hidden=true>;
local int k<hidden=true>;
local int l<hidden=true>;
local int m<hidden=true>;
local int n<hidden=true>;
local int o<hidden=true>;
local int p<hidden=true>;
local int currentpos<hidden=true>;
local int currentpos2<hidden=true>;
local int currentpos3<hidden=true>;
local int currentpos4<hidden=true>;
local int textending<hidden=true>;
local int dataarraystart<hidden=true>;
local int dataarrayblocks<hidden=true>;
local int maxfilesize<hidden=true>;
local int propertytablestart;
local int propertytablepos;
local int checkthis;

struct File{

	checkthis = 0;

	struct FileHeader{
		uint32 filetype<name="Filetype",bgcolor = cRed>;
		uint16 Endianess<name = "Endianess ID",bgcolor = cRed>;
		uint16 unk;
		uint32 FileVersion<name="File Version",bgcolor = cRed>;
		uint32 filesize<name="Filesize",bgcolor = cRed>;
		maxfilesize = filesize;
	}fileheader<name = "File Header",bgcolor = cRed>;

	struct TextData{
		for( j = 0; j < 99999; j++ )
		struct BTLTable{
			ubyte textendcheck<hidden=true>;
			if (textendcheck == 255)
			{
				j = 99999;;
				FSkip(-1);
            char StringValue[];
            FSkip(-14);
			}
			else
			{
				FSkip(-1);
				char StringValue[];
			}
		}text<read = GetString2,name="Effect",bgcolor = cRed>;
        textending = FTell()+3;
	}textdata<name="Effects String Data",bgcolor = cRed>;
	FSkip(-1);

   struct Text2Data{
		for( j = 0; j < 99999; j++ )
		struct BatTable{
			ubyte textendcheck<hidden=true>;
			if (textendcheck == 255)
			{
				j = 99999;;
				FSkip(-1);
			}
			else
			{
				FSkip(-1);
				char StringValue[];
			}
		}text<read = GetString,name="Battle",bgcolor = cRed>;
        textending = FTell()+3;
	}textdata<name="Battle String Data",bgcolor = cRed>;
	FSkip(1);
	
	struct DataTable{
      for( j = 0; j < 99999; j++ )
		struct Data{
         uint16 textendcheck<hidden=true>;
			if (textendcheck == 10814)
			{
				j = 99999;
			}
			else
			{
				FSkip(-2);
				uint16 Unk;
			}
		}unknownblock<name="Data Block", read = GetUnkName>;
	}gmttable<name="Effects Data Table",bgcolor = cRed>;
   
   struct Text3Data{
		for( j = 0; j < 99999; j++ )
		struct MoveTable{
			ubyte textendcheck<hidden=true>;
			if (textendcheck == 255)
			{
				j = 99999;;
				FSkip(-1);
			}
			else
			{
				FSkip(-1);
				char StringValue[];
			}
		}text<read = GetString3,name="Move Name",bgcolor = cRed>;
	}textdata<name="Move String Data",bgcolor = cRed>;
   FSkip(2);
   
   struct DataTable2{
      for( j = 0; j < 99999; j++ )
      if (FTell() == FileSize())
      {
          j == 99999;
      }
      else
      {
          struct Data2{
		       uint16 Unk;
          }unknownblock<name="Data Block">;
      }
	}gmttable<name="Moves Data Table",bgcolor = cRed>;

}file<name="ActionSet.cas",bgcolor = cRed>;

string GetString(BTLTable& j)
{
    return j.StringValue;
}

string GetString2(BatTable& j)
{
    return j.StringValue;
}

string GetString3(BatTable& j)
{
    return j.StringValue;
}

string GetUnkName(Data& j)
{
    return j.pointerval2;
}

string GetMoveName(Data2& j)
{
    return j.pointerval2;
}
