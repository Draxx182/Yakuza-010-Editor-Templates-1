//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//      File: yakuza_cmt.bt
//   Authors: SutandoTsukai181, Capit√°n Retraso
//   Version: 1.0
//   Purpose: Parse Yakuza series CMT motion files 
//  Category: 
// File Mask: *.cmt
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "/../includes/include.h"

#define PI 3.14159265

typedef struct
{
    u16 Checksum;
    char Data[ 30 ];

    local u16 newChecksum = 0;
    local u32 i;
    for ( i = 0; i < 30; ++i )
        newChecksum += Data[i];

    Assert( newChecksum == Checksum );
} TString;

string TStringToString( TString& value )
{
    return value.Data;
}

typedef struct
{
    SetRandomBackColor();
    LittleEndian();
    char Magic[4];        // CMTP
    s8 UnusedEndianness;  // -1
    u8 Endianness;        // 1
    if ( Endianness == 1 ) BigEndian();
    u16 Field06;          // 0
    u32 Version;
    u32 FileSize; 

    SetRandomBackColor();
    u32 AnimationCount;
    u32 Padding[3];

    SetRandomBackColor();
    struct { struct TAnimation Animation[ AnimationCount ]; } Animations;

} TCam;

typedef struct
{
    f32 Framerate;
    u32 TotalFrames;
    u32 AnimationDataOffset;
    u32 Format;
	
	FPush();
	{
		FSeekRel( AnimationDataOffset );
		struct TAnimationData AnimationData[TotalFrames]; // segments from last index with current CurveCount
	}
	FPop();

} TAnimation <optimize=false>;

typedef struct
{
    f32 PosX;
    f32 PosY;
    f32 PosZ;
    f32 FOV<read=RadianToDegree>; // in radian
    f32 FocusX;
    f32 FocusY;
    f32 FocusZ;
    f32 Rotation;
} TAnimationData;

string RadianToDegree( f32& rad )
{
    local string str = "";
    SPrintf( str, "%f deg", rad * 180 / PI );

    return str;
}

TCam Cam;
